<Application x:Class="Inschrijven.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Inschrijven"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:Inschrijven.Converters"
             StartupUri="Views/Window/MainWindow.xaml">
    
    <Application.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVisConv" />
        <converters:InverseBooleanConverter x:Key="InverseBoolConv"/>
        <converters:BooleanToColorConverter x:Key="BoolColorConv"/>

        <!--Default values for rounded controls-->
        <CornerRadius x:Key="Rounded_CornerRadius">6</CornerRadius>
        <SolidColorBrush x:Key="Rounded_Background">White</SolidColorBrush>
        <SolidColorBrush x:Key="Rounded_BorderColor">DimGray</SolidColorBrush>
        <SolidColorBrush x:Key="Rounded_HighlightColor">LightGreen</SolidColorBrush>
        
        <!--Default instellingen voor styles-->
        <Style x:Key="Default_Style" TargetType="{x:Type Control}">
            <Setter Property="FontSize" Value="13" />
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="MinHeight" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
        </Style>
        
        <!--Validatie Error Template-->
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <Grid x:Name="container">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <AdornedElementPlaceholder Name="customAdorner"
				                           Grid.Column="0"
				                           VerticalAlignment="Center" />
                <Border x:Name="ValidationErrorElement"
				        BorderBrush="#FFDB000C"
				        BorderThickness="1.2"
				        CornerRadius="{StaticResource Rounded_CornerRadius}"
				        ToolTip="{Binding ElementName=customAdorner,
				                          Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                </Border>
                <Border Grid.Column="1"
				        Width="15"
				        Height="15"
				        Margin="3,0"
				        HorizontalAlignment="Right"
				        VerticalAlignment="Center"
				        Background="Red"
				        CornerRadius="10"
				        ToolTip="{Binding ElementName=customAdorner,
				                          Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                    <TextBlock HorizontalAlignment="center"
					           VerticalAlignment="center"
					           FontWeight="Bold"
					           Foreground="white"
					           Text="!" />
                </Border>
            </Grid>
        </ControlTemplate>

        <!--Rounded button-->
        <Style x:Key="RoundedButton"  TargetType="{x:Type Button}" BasedOn="{StaticResource Default_Style}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="{StaticResource Rounded_CornerRadius}"
                                BorderBrush="{StaticResource Rounded_BorderColor}" 
                                BorderThickness="1" 
                                SnapsToDevicePixels="True" 
                                x:Name="border">
                            <Border CornerRadius="{StaticResource Rounded_CornerRadius}" 
                                    Background="{StaticResource Rounded_Background}" 
                                    BorderThickness="0" 
                                    SnapsToDevicePixels="True" 
                                    Padding="2"
                                    x:Name="content">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                            </Border>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Margin" TargetName="border" Value="-5,-1"/>
                                <Setter Property="Background" TargetName="content" Value="{StaticResource Rounded_HighlightColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.25"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="10,2.5"/>
        </Style>

        <!--Rounded textbox-->
        <Style x:Key="RoundedTextbox" TargetType="{x:Type TextBox}"  BasedOn="{StaticResource Default_Style}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="{StaticResource Rounded_CornerRadius}"
                                BorderBrush="{StaticResource Rounded_BorderColor}" 
                                BorderThickness="1" 
                                SnapsToDevicePixels="True" 
                                x:Name="border">
                            <Border CornerRadius="{StaticResource Rounded_CornerRadius}" 
                                    Background="{StaticResource Rounded_Background}" 
                                    BorderThickness="0" 
                                    SnapsToDevicePixels="True" 
                                    Padding="2"
                                    x:Name="content">
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="10,2.5"/>
        </Style>

        <!-- Rounded datePicker -->
        <Style x:Key="DatePickerStyle"  TargetType="{x:Type DatePicker}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="IsTodayHighlighted" Value="True" />
            <Setter Property="SelectedDateFormat" Value="Short" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                            <Border.Child>
                                <Grid x:Name="PART_Root"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.Resources>
                                        <!-- Main DatePicker Brushes -->
                                        <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />

                                        <!-- Button Template -->
                                        <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="Button">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="0" />
                                                            <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.1" />
                                                            <VisualTransition To="Pressed" GeneratedDuration="0:0:0.1" />
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#FF448DCA"/>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>

                                                <!--Start UI-->
                                                <Grid Height="20" Width="20" 
                                                      HorizontalAlignment="Right" VerticalAlignment="Center" 
                                                      Margin="0, 0, 20, 0" Background="#11FFFFFF" FlowDirection="LeftToRight">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="20*"/>
                                                        <ColumnDefinition Width="20*"/>
                                                        <ColumnDefinition Width="20*"/>
                                                        <ColumnDefinition Width="20*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="23*"/>
                                                        <RowDefinition Height="19*"/>
                                                        <RowDefinition Height="19*"/>
                                                        <RowDefinition Height="19*"/>
                                                    </Grid.RowDefinitions>
                                                    <Border Margin="-1" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderThickness="1" BorderBrush="#FF45D6FA" Opacity="0" CornerRadius="0,0,1,1" x:Name="Highlight"/>
                                                    <Border x:Name="Background" Margin="0,-1,0,0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1" BorderBrush="#FFFFFFFF" Opacity="1" CornerRadius=".5" Background="#FF1F3B53"/>
                                                    <Border x:Name="BackgroundGradient" Margin="0,-1,0,0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1" BorderBrush="#BF000000" Opacity="1" CornerRadius=".5">
                                                        <Border.Background>
                                                            <LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
                                                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                                <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                                <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                                <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                    </Border>
                                                    <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                        <Rectangle.Stroke>
                                                            <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                                <GradientStop Color="#FF494949"/>
                                                                <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Stroke>
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                                <GradientStop Color="#FF4084BD"/>
                                                                <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                    <Path HorizontalAlignment="Center" Margin="4,3,4,3" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.Row="1" Fill="#FF2F2F2F" Stretch="Fill" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Grid.ColumnSpan="4" Grid.RowSpan="3"/>
                                                    <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" Fill="#FFFFFFFF" StrokeThickness="0" Grid.ColumnSpan="4" Width="3" Height="3"/>
                                                    <Border Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderThickness="1" BorderBrush="#B2FFFFFF" Opacity="0" CornerRadius="0,0,.5,.5" x:Name="DisabledVisual"/>
                                                </Grid>
                                                <!--End UI-->
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <DatePickerTextBox x:Name="PART_TextBox"                                                                       
                                            Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                                            Foreground="{TemplateBinding Foreground}"
                                            BorderThickness="1" BorderBrush="{StaticResource Rounded_BorderColor}" 
                                            Text="dd/mm/yyyy"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch" 
                                            Style="{StaticResource RoundedTextbox}">
                                    </DatePickerTextBox>
                                    <Button x:Name="PART_Button" Grid.Row="0" Grid.Column="1"
                                        Template="{StaticResource DropDownButtonTemplate}"
                                        Foreground="{TemplateBinding Foreground}" 
                                        MinWidth="50"
                                        Width="20"
                                        Margin="3,0" 
                                        Focusable="False" 
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Right" />
                                    <Grid x:Name="PART_DisabledVisual" 
                                      Opacity="0" 
                                      IsHitTestVisible="False" 
                                      Grid.Row="0" Grid.Column="0"
                                      Grid.ColumnSpan="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Grid.Row="0" Grid.Column="0" RadiusX="1" RadiusY="1" Fill="#A5FFFFFF"/>
                                        <Rectangle Grid.Row="0" Grid.Column="1" RadiusX="1" RadiusY="1" Fill="#A5FFFFFF" Height="18" Width="19" Margin="3,0,3,0" />
                                        <Popup x:Name="PART_Popup"
                                           PlacementTarget="{Binding ElementName=PART_TextBox}"
                                           Placement="Bottom" 
                                           StaysOpen="False"
                                           AllowsTransparency="True" />
                                    </Grid>
                                </Grid>
                            </Border.Child>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Rounded combobox-->
        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton"  BasedOn="{StaticResource Default_Style}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Border"
                                    Grid.ColumnSpan="2"
                                    CornerRadius="{StaticResource Rounded_CornerRadius}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{StaticResource Rounded_BorderColor}"
                                    BorderThickness="1"
                                    MinWidth="{Binding Path=ActualWidth, ElementName=ComboBoxGrid}"/>
                            <Path x:Name="Arrow"
                                  Grid.Column="1"    
                                  Fill="{TemplateBinding Foreground}"
                                  Stroke="{TemplateBinding Foreground}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True"/>
        </ControlTemplate>
        <Style x:Key="RoundedComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="BorderBrush" Value="{StaticResource Rounded_BorderColor}" />
            <Setter Property="Background" Value="{StaticResource Rounded_Background}" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="10,2.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid Name="ComboBoxGrid">
                            <ToggleButton Cursor="Hand"
                                          Name="ToggleButton"
                                          BorderBrush="{StaticResource Rounded_BorderColor}"
                                          Background="{TemplateBinding Background}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Style="{StaticResource ComboBoxToggleButton}"
                                          Grid.Column="2"
                                          Focusable="false"
                                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press"/>

                            <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="10,3,30,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                            
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="3,3,23,3"
                                     Focusable="True" 
                                     Visibility="Hidden"
                                     Grid.Column="1"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border CornerRadius="{StaticResource Rounded_CornerRadius}"
                                            x:Name="DropDownBorder"
                                            Background="{StaticResource Rounded_Background}"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource Rounded_BorderColor}"
                                            HorizontalAlignment="Left"
                                            MinWidth="{TemplateBinding ActualWidth}"/>
                                    <ScrollViewer Margin="2" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" 
                                                    KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style x:Key="RoundedComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border"
                                Padding="6,2"
                                Margin="1"
                                BorderThickness="2,0,0,0"
                                Background="Transparent"
                                BorderBrush="Transparent">
                            <TextBlock TextAlignment="Left">
                                <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Rounded_HighlightColor}"/>
                                <Setter TargetName="Border" Property="CornerRadius" Value="{StaticResource Rounded_CornerRadius}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--Rounded listview-->
        <Style x:Key="RoundedListView"  TargetType="{x:Type ListView}" BasedOn="{StaticResource Default_Style}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border CornerRadius="{StaticResource Rounded_CornerRadius}"
                                BorderBrush="{StaticResource Rounded_BorderColor}" 
                                BorderThickness="1" 
                                SnapsToDevicePixels="True" 
                                x:Name="border">
                            <Border CornerRadius="{StaticResource Rounded_CornerRadius}" 
                                    Background="{StaticResource Rounded_Background}" 
                                    BorderThickness="0" 
                                    SnapsToDevicePixels="True" 
                                    Padding="2"
                                    x:Name="content">
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="10,2.5"/>
        </Style>


    </Application.Resources>
</Application>
